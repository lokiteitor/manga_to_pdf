comprimir luego de cierto limite 


*crear clase que busque de forma automatica los archivos candidatos de cualquier tipo


** revisar metodo getvalidlist de Mensaje relacionado con FileZip para obtener lista
valida de archivos de la lista negra ** completar con nuevos metodos 

** mejorar setup.py



// dar soporte a archivos comprimidos dentro de otros archivos comprimidos

//compara archivos con extencion desconocida con los .rar o .zip y renombrarlos



// solucionar problema del hola en la funcion de ordenamiento:
// por que todos pasan por la funcion ordenlst() y no por order
// importante ya que gasta recursos el convertir una cadena a entero 
// sin que halla necesidad


// problema del 10 en metodo de ordenamiento
// aprueba que el 10 y solo el 10 es el menor de todos los numeros

** mejorar la redimension de las imagenes


% error v2.0a400.01: no soporta la descomprecion recursiva desde la creacion
% el directorio destino en .tmp 
################################################################
iniciando proceso
se ha reubicado el archivo Tonari_21-30.rar a /library/zip
se ha reubicado el archivo Tonari_11-20.rar a /library/zip
Traceback (most recent call last):
  File "/usr/bin/mangatopdf.py", line 68, in <module>
    main(sys.argv[1:])
  File "/usr/bin/mangatopdf.py", line 55, in main
    des.UnComMult(fl.SearchCompress())
  File "/usr/lib/python2.7/site-packages/Filemanga/FileZip.py", line 45, in UnComMult
    self.UnCompressRar(i)
  File "/usr/lib/python2.7/site-packages/Filemanga/FileZip.py", line 94, in UnCompressRar
    destiny = self.getDestinyrar(path)
  File "/usr/lib/python2.7/site-packages/Filemanga/FileZip.py", line 124, in getDestinyrar
    os.mkdir(name)
OSError: [Errno 17] File exists: '/home/lokiteitor/.manga_to_pdf/tmp/images/Tonari_21-30/'

################################################################


% error v2.0a400.02:
################################################################
error relacionado con los caracteres de entrada durante el ordenamiento de listas
no es posible comparar un caracter alfabetico contra uno numerico
la posible solucion sea introduccir un filtro preordenamiento 

Traceback (most recent call last):
  File "/usr/bin/mangatopdf.py", line 66, in <module>
    main(sys.argv[1:])
  File "/usr/bin/mangatopdf.py", line 58, in main
    mk.checklist()
  File "/usr/lib/python2.7/site-packages/Filemanga/MakePdf.py", line 76, in checklist
    self.Make_Document(path+'/',title,listimg)
  File "/usr/lib/python2.7/site-packages/Filemanga/MakePdf.py", line 82, in Make_Document
    listimg =self.orderlst(listimg)
  File "/usr/lib/python2.7/site-packages/Filemanga/MakePdf.py", line 142, in orderlst
    mn , dst = orderint(i,lst)
  File "/usr/lib/python2.7/site-packages/Filemanga/MakePdf.py", line 45, in orderint
    can = int(os.path.splitext(lst[lon])[0])
ValueError: invalid literal for int() with base 10: '00a '
################################################################


% error v2.0a400.03:
################################################################
descomprime el archivo de un directorio que el usuario descomprime a voluntad
esto genera un doble trabajo innecesario
la posible solucion sea el registro en tiempo de ejecucion de que archivos se
repiten en base al nombre 
